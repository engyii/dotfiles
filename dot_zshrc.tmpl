# Path Configuration
# Add local bin paths
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/bin:$PATH"

# Make sure XDG dirs are set
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# History configuration
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY

# Editor
export EDITOR="nvim"
export VISUAL="nvim"

# Initialize zap plugin manager
[ -f "$HOME/.local/share/zap/zap.zsh" ] || zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1

# Source zap
[ -f "$HOME/.local/share/zap/zap.zsh" ] && source "$HOME/.local/share/zap/zap.zsh"

# Plugins
plug "zsh-users/zsh-autosuggestions"
plug "zsh-users/zsh-syntax-highlighting"
plug "zap-zsh/supercharge"
plug "zap-zsh/zap-prompt"
plug "zap-zsh/fzf"
# Try to use zap-zsh/eza if available, otherwise use zap-zsh/exa
if command -v eza &> /dev/null; then
    plug "zap-zsh/eza"
elif command -v exa &> /dev/null; then
    plug "zap-zsh/exa"
fi
plug "agkozak/zsh-z"

# Container detection
if [ -f "/.dockerenv" ] || grep -q docker /proc/1/cgroup 2>/dev/null; then
    export RUNNING_IN_CONTAINER=true
  echo "🐳 Running in container environment"
else
    export RUNNING_IN_CONTAINER=false
fi

# OS-specific configurations
{{ if eq .osid "linux" -}}
# Linux specific configurations
alias open="xdg-open"
{{ else if eq .osid "wsl" -}}
# WSL specific configurations
alias open="explorer.exe"
{{ end -}}
# General aliases
# Use exa or ls depending on what's available
if command -v eza &> /dev/null; then
    alias ls="eza --icons --group-directories-first"
    alias ll="eza -la --icons --group-directories-first"
    alias lt="eza -T --icons --group-directories-first"
elif command -v exa &> /dev/null; then
    alias ls="exa --icons --group-directories-first"
    alias ll="exa -la --icons --group-directories-first"
    alias lt="exa -T --icons --group-directories-first"
else
    alias ls="ls --color=auto"
    alias ll="ls -la --color=auto"
fi

# More aliases for modern CLI tools with fallbacks
command -v rg &> /dev/null && alias grep="rg" || alias grep="grep --color=auto"
command -v bat &> /dev/null && alias cat="bat" || true
command -v nvim &> /dev/null && alias vim="nvim" && alias vi="nvim" || true

# Z plugin to replace cd when available
if command -v z &> /dev/null; then
    alias cd="z"
fi

# Git aliases
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gp="git push"
alias gl="git pull"

# Node/NPM development aliases
alias ni="npm install"
alias nid="npm install --save-dev"
alias nig="npm install -g"
alias nr="npm run"
alias nt="npm test"

# Initialize starship prompt
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

# Init direnv if available
if command -v direnv &> /dev/null; then
  eval "$(direnv hook zsh)"
fi

# FZF configuration
if command -v fzf &> /dev/null; then
  # Set fd as the default source for fzf
  if command -v fd &> /dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
  fi

  # Use catppuccin theme for fzf
  export FZF_DEFAULT_OPTS=" \
  --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"
fi
