# Path Configuration
# Add local bin paths
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/bin:$PATH"

# Make sure XDG dirs are set
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

# History configuration
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=10000
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_SAVE_NO_DUPS
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY

# Editor
export EDITOR="nvim"
export VISUAL="nvim"

# Load autoload functions
autoload -Uz compinit colors
colors
compinit -d "$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"

# Basic zsh settings
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
setopt AUTO_CD
setopt EXTENDED_GLOB
setopt PROMPT_SUBST
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

# Initialize zap plugin manager
[ -f "$HOME/.local/share/zap/zap.zsh" ] || zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1

# Source zap
[ -f "$HOME/.local/share/zap/zap.zsh" ] && source "$HOME/.local/share/zap/zap.zsh"

# Plugins
plug "zsh-users/zsh-autosuggestions"
plug "zsh-users/zsh-syntax-highlighting"
plug "zap-zsh/supercharge"
# Removing zap-prompt to avoid vcs_info issues
# plug "zap-zsh/zap-prompt"
plug "zap-zsh/fzf"
plug "zap-zsh/exa"
plug "agkozak/zsh-z"

# OS-specific configurations
{{ if eq .osid "linux" -}}
# Linux specific configurations
alias open="xdg-open"
{{ else if eq .osid "wsl" -}}
# WSL specific configurations
alias open="explorer.exe"
{{ end -}}

# General aliases
alias ls="exa --icons --group-directories-first"
alias ll="exa -la --icons --group-directories-first"
alias lt="exa -T --icons --group-directories-first"
alias grep="rg"
alias cat="bat"
alias vim="nvim"
alias vi="nvim"
alias cd="z"

# Git aliases
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gp="git push"
alias gl="git pull"

# Node/NPM development aliases
alias ni="npm install"
alias nid="npm install --save-dev"
alias nig="npm install -g"
alias nr="npm run"
alias nt="npm test"

# Initialize starship prompt
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

# Init direnv if available
if command -v direnv &> /dev/null; then
  eval "$(direnv hook zsh)"
fi

# FZF configuration
if command -v fzf &> /dev/null; then
  # Set fd as the default source for fzf
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'

  # Use catppuccin theme for fzf
  export FZF_DEFAULT_OPTS=" \
  --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"
fi

# Make sure the directory for the zcompdump file exists
mkdir -p "$XDG_CACHE_HOME/zsh"

# Check if we are in a dev container
if [ -f /var/run/.containerenv ] || [ -f /.dockerenv ] || [ -n "$CODESPACES" ]; then
  echo "üê≥ Running in container environment"
fi
